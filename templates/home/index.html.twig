{% extends 'base.html.twig' %}

{% block title %}Bienvenue{% endblock %}

{% block body %}
{# <style>
    .welcome-container {
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        height: 70vh;
        background-color: #f2f2f2;
        border-radius: 20px;
    }
    
    .welcome-message {
        text-align: center;
        font-size: 24px;
        margin-bottom: 20px;
    }
    
    .welcome-image {
        width: 200px;
        height: 200px;
        border-radius: 50%;
        object-fit: cover;
        margin-bottom: 20px;
    }
    
    .welcome-button {
        padding: 10px 20px;
        background-color: #4caf50;
        color: #fff;
        border: none;
        border-radius: 5px;
        font-size: 18px;
        cursor: pointer;
    }
</style>

<div class="welcome-container">
    <img class="welcome-image" src="/img/logo2.png" alt="Logo">
    <h1 class="welcome-message">Bienvenue sur notre Application !</h1>
    <p>vous êtes le Bienvenue. Nous sommes ravis de vous accueillir.</p>
    <p>Commencez dès maintenant à explorer nos fonctionnalités.</p>
    <a href="/dashboard" class="welcome-button">Accéder au tableau de bord</a>
</div> #}

<div class="card mt-5">
  
    <div class="card-header">
      Graphe nombre total des voitures en panne et en bonne état
    </div>
    
      <canvas id="myChart" style="width:100%;max-width:600px"></canvas>
    
  
</div>

<script>
  fetch('/api/etat-voitures')
    .then(response => response.json())
    .then(data => {
      var xValues = ["En panne", "En Bon Etat"];
      var yValues = [data.en_panne, data.en_bon_etat];
      var barColors = ["red", "green"];

      new Chart("myChart", {
        type: "bar",
        data: {
          labels: xValues,
          datasets: [{
            backgroundColor: barColors,
            data: yValues
          }]
        },
        options: {
          legend: { display: false },
          title: {
            display: true,
            text: "Graphe nombre total des voitures en panne et en bonne état"
          }
        }
      });
    })
    .catch(error => console.error('Error fetching data:', error));
</script>
 <div style="width:80%; margin:auto;">
        <!-- Graphique pour le nombre total de voitures -->
        <canvas id="totalChart"></canvas>
    </div>
    
    <div style="width:80%; margin:auto;">
        <!-- Graphique pour le nombre de voitures par direction -->
        <canvas id="directionChart"></canvas>
    </div>

    <script>
        // Récupérer les données PHP passées depuis Symfony
        var totalVoitures = {{ totalVoitures }};
        var voituresByDirection = {{ voituresByDirection|json_encode|raw }};

        // Préparer les données pour le graphique des directions
        var directionLabels = Object.keys(voituresByDirection);
        var directionData = Object.values(voituresByDirection);

        // Créer le graphique pour le nombre total de voitures
        var ctxTotal = document.getElementById('totalChart').getContext('2d');
        var totalChart = new Chart(ctxTotal, {
            type: 'pie',
            data: {
                labels: ['Total des voitures'],
                datasets: [{
                    label: 'Nombre total de voitures',
                    data: [totalVoitures, "none"], // Ici, 500 est un exemple, ajustez selon vos besoins
                    backgroundColor: ['rgba(54, 162, 235, 0.6)', 'rgba(255, 99, 132, 0.6)'],
                    borderColor: ['rgba(54, 162, 235, 1)', 'rgba(255, 99, 132, 1)'],
                    borderWidth: 1
                }]
            },
            options: {
                responsive: true,
                maintainAspectRatio: false,
                legend: {
                    position: 'top',
                }
            }
        });

        // Créer le graphique pour le nombre de voitures par direction
        var ctxDirection = document.getElementById('directionChart').getContext('2d');
        var directionChart = new Chart(ctxDirection, {
            type: 'bar',
            data: {
                labels: directionLabels,
                datasets: [{
                    label: 'Nombre de voitures par direction',
                    data: directionData,
                    backgroundColor: 'rgba(75, 192, 192, 0.6)',
                    borderColor: 'rgba(75, 192, 192, 1)',
                    borderWidth: 1
                }]
            },
            options: {
                scales: {
                    yAxes: [{
                        ticks: {
                            beginAtZero: true,
                            precision: 0
                        }
                    }]
                }
            }
        });
    </script>
{% endblock %}